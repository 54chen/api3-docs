---
title: Airnode 部署器镜像
---

<TitleSpan>Docker 镜像</TitleSpan>

# {{$frontmatter.title}}

<VersionWarning/>

<TocHeader /> <TOC class="table-of-contents" :include-level="[2,3]" />

可以使用部署器映像来部署或删除与AWS等云提供商的Airnode。 最简单的方法是使用预设置的软件包。 如果您希望 自行构建镜像，请在部署器软件包[README](https://github.com/api3dao/airnode/tree/v0.5/packages/airnode-deployer/docker)中查看。

部署器镜像有两条命令。

- `deploy`: 使用配置文件部署或更新一个Airnode。
- `remove`: 使用 `receivt.json` 文件删除一个 Airnode

::: tip 快速部署演示

请参阅 [快速部署演示](../tutorial/)，用部署器镜像快速`deploy` 和 `remove`预配置的Airnode。

:::

## 云供应商账户

为了将Airnode部署到无服务器的云提供商，你需要向Airnode部署器镜像提供供应商的凭证。 该部署器镜像目前支持部署到AWS和GCP。

### AWS

If you are new to AWS watch this [video](https://www.youtube.com/watch?v=KngM5bfpttA) to set up an AWS account and create cloud provider credentials.

### GCP

- Create a [Google Cloud project](https://cloud.google.com/resource-manager/docs/creating-managing-projects)
- Enable [App Engine Admin API](https://console.cloud.google.com/apis/library/appengine.googleapis.com) for your project
- Create a new [service account](https://console.cloud.google.com/iam-admin/serviceaccounts) with the `Owner` role
- Add a new access key of type JSON for the service account and download it as `gcp.json`

## deploy

The `deploy` command will create the Airnode with a cloud provider or update it if it already exists. Three files are needed to run the deploy command.

- config.json
- secrets.env
- aws.env (AWS only)
- gcp.json (GCP only)

A `receipt.json` file will be created upon completion. It contains some deployment information and is used to remove the Airnode.

<!-- Use of .html below is intended. -->
<airnode-WarningSimultaneousDeployments removeLink="./deployer-image.html#manual-removal"/>

<p><airnode-DeployerPermissionsWarning/></p>

### AWS

:::: tabs

::: tab Linux/Mac/WSL2

```sh
docker run -it --rm \
  --env-file aws.env \
  -e USER_ID=$(id -u) -e GROUP_ID=$(id -g) \
  -v "$(pwd)/config:/app/config" \
  -v "$(pwd)/output:/app/output" \
  api3/airnode-deployer:0.6.0 deploy
```

:::

::: tab Windows

For Windows, use CMD (and not PowerShell).

```sh
docker run -it --rm ^
  --env-file aws.env ^
  -v "%cd%/config:/app/config" ^
  -v "%cd%/output:/app/output" ^
  api3/airnode-deployer:0.6.0 deploy
```

:::

::::

### GCP

:::: tabs

::: tab Linux/Mac/WSL2

```sh
docker run -it --rm \
  -e USER_ID=$(id -u) -e GROUP_ID=$(id -g) \
  -v "$(pwd)/gcp.json:/app/gcp.json" \
  -v "$(pwd)/config:/app/config" \
  -v "$(pwd)/output:/app/output" \
  api3/airnode-deployer:0.6.0 deploy
```

:::

::: tab Windows

```sh
docker run -it --rm ^
  -v "%cd%/gcp.json:/app/gcp.json" ^
  -v "%cd%/config:/app/config" ^
  -v "%cd%/output:/app/output" ^
  api3/airnode-deployer:0.6.0 deploy
```

:::

::::

## remove

When an Airnode was deployed using the `deploy` command a `receipt.json` file was created. Use this file to remove an Airnode.

### AWS

:::: tabs

::: tab Linux/Mac/WSL2

```sh
docker run -it --rm \
  --env-file aws.env \
  -v "$(pwd)/output:/app/output" \
  api3/airnode-deployer:0.6.0 remove -r output/receipt.json
```

:::

::: tab Windows

For Windows, use CMD (and not PowerShell).

```sh
docker run -it --rm ^
  --env-file aws.env ^
  -v "%cd%/output:/app/output" ^
  api3/airnode-deployer:0.6.0 remove -r output/receipt.json
```

:::

::::

### GCP

:::: tabs

::: tab Linux/Mac/WSL2

```sh
docker run -it --rm \
  -v "$(pwd)/gcp.json:/app/gcp.json" \
  -v "$(pwd)/output:/app/output" \
  api3/airnode=deployer:0.6.0 remove -r output/receipt.json
```

:::

::: tab Windows

For Windows, use CMD (and not PowerShell).

```sh
docker run -it --rm ^
  -v "%cd%/gcp.json:/app/gcp.json" ^
  -v "%cd%/output:/app/output" ^
  api3/airnode-deployer:0.6.0 remove -r output/receipt.json
```

:::

::::

## Manual Removal

Optionally you can remove an Airnode manually though it is highly recommended that you do so using the deployer image's `remove` command. Airnode has a presence in several areas of both AWS and GCP. An Airnode has a `airnodeAddressShort` (e.g., `0ab830c`) that is included in the element name of AWS and GCP deployed features.

::: danger Remember

Only delete elements of a feature with the `airnodeAddressShort` address in the name you are targeting. There can be more than one Airnode.

:::

:::: tabs

::: tab AWS

<airnode-DeleteAirnodeAws />

:::

::: tab GCP

<airnode-DeleteAirnodeGcp />

:::

::::

Learn more about AWS or GCP resources that Airnode uses in the [Cloud Resources](../../reference/cloud-resources.md) doc.
